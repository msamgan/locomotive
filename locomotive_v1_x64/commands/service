#!/bin/sh

. "$BASE_DIRECTORY/config/paths"
. "$BASE_DIRECTORY/config/methods"

NAME="service"
DESCRIPTION="Commands for services, locomo service <project_name>.
    list: list all service for a specified project
    add: add a new service
    remove: remove a service from a specified project
    start: start a perticular service
"

_invoke() {

  if [ -z $1 ]; then
    _redLog "Please provide a project name"
    exit 0
  fi

  if [ ! -d "$SERVICE_PATH/$1" ]; then
    _redLog "Invalid project name"
    exit 0
  fi

  if [ -z $2 ]; then
    _redLog "Please provide a command"
    _greenLog "$DESCRIPTION"
    exit 0
  fi

  "$2" "$1"
}

add() {
  while true; do
    echo -n "Service name (required) : "
    read name
    if [ "$name" != "" ]; then
      break
    fi
  done

  echo -n "Service description : "
  read description

  while true; do
    echo -n "Service directory (required) : "
    read directory
    if [ "$directory" != "" ]; then
      break
    fi
  done

  while true; do
    echo -n "Service command (required) : "
    read command
    if [ "$command" != "" ]; then
      break
    fi
  done

  while true; do
    echo -n "Service Port (required) : "
    read port
    if [ "$port" != "" ]; then
      break
    fi
  done

  echo "#!/bin/sh

NAME='$name'
DESCRIPTION='$description'
DIRECTORY='$directory'
COMMAND='$command'
PORT='$port'" >>"$SERVICE_PATH/$1/$name"
}

list() {
  for entry in "$SERVICE_PATH/$1"/*; do
    . "$entry"
    echo "\e[1;33m$NAME\e[0m : $DESCRIPTION (directory: \e[1;32m$DIRECTORY\e[0m, command: \e[1;32m$COMMAND\e[0m, port: \e[1;32m$PORT\e[0m)"
  done
}

remove() {

  while true; do
    echo -n "Service name (required) : "
    read name
    if [ "$name" != "" ]; then
      break
    fi
  done

  if [ ! -f "$SERVICE_PATH/$1/$name" ]; then
    _redLog "Service not found"
    exit 0
  fi

  unlink "$SERVICE_PATH/$1/$name"
  _redLog "Service removed successfully"
}

start() {

  while true; do
    echo -n "Service name (required) : "
    read name
    if [ "$name" != "" ]; then
      break
    fi
  done

  if [ ! -f "$SERVICE_PATH/$1/$name" ]; then
    _redLog "Service not found"
    exit 0
  fi

  . "$SERVICE_PATH/$1/$name"

  echo Running : "\e[1;32m$NAME\e[0m"
  echo "\e[1;32mExecuting $COMMAND in $DIRECTORY\e[0m"
  gnome-terminal --working-directory="$DIRECTORY" -e "$COMMAND" --title="$1: $NAME"
}
